# ------------------------
# Spring Boot Deployment + Service
# ------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-mongo-db-service
  labels:
    app.kubernetes.io/name: spring-boot-mongo-db-service
    app.kubernetes.io/instance: spring-boot-mongo-db-instance
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot-mongo-db-service
  template:
    metadata:
      labels:
        app: spring-boot-mongo-db-service
        app.kubernetes.io/name: spring-boot-mongo-db-service
        app.kubernetes.io/instance: spring-boot-mongo-db-instance
    spec:
      containers:
        - name: spring-boot-mongo-db-service
          image: siddhantpatni0407/spring-boot-mongo-db-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATA_MONGODB_URI
              value: mongodb://admin:admin@mongo:27017/users_db?authSource=admin
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-mongo-db-service
  labels:
    app.kubernetes.io/name: spring-boot-mongo-db-service
    app.kubernetes.io/instance: spring-boot-mongo-db-instance
spec:
  selector:
    app: spring-boot-mongo-db-service
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
