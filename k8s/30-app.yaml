apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-mongo-db-service
  namespace: mongo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-mongo-db-service
  template:
    metadata:
      labels:
        app: spring-boot-mongo-db-service
    spec:
      containers:
        - name: app
          image: spring-boot-mongo-db-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: SPRING_PROFILES_ACTIVE
            - name: SPRING_DATA_MONGODB_URI
              value: "mongodb://$(MONGO_INITDB_ROOT_USERNAME):$(MONGO_INITDB_ROOT_PASSWORD)@mongo:27017/$(MONGO_DB)?authSource=admin"
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_DB
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_DB
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-mongo-db-service
  namespace: mongo-demo
spec:
  selector:
    app: spring-boot-mongo-db-service
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  type: ClusterIP
